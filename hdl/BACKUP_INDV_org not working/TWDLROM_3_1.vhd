-- -------------------------------------------------------------
-- 
-- File Name: /u/home/eraguzin/matlab/LNspec/matlab/codegen/sfft/hdlsrc/TWDLROM_3_1.vhd
-- Created: 2023-01-17 10:39:47
-- 
-- Generated by MATLAB 9.12, MATLAB Coder 5.4 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: TWDLROM_3_1
-- Source Path: sfft_fixpt/dsphdl.FFT/TWDLROM_3_1
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.spectrometer_fixpt_pkg.ALL;

ENTITY TWDLROM_3_1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dout_2_1_vld                      :   IN    std_logic;
        softReset                         :   IN    std_logic;
        twdl_3_1_re                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En30
        twdl_3_1_im                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En30
        twdl_3_1_vld                      :   OUT   std_logic
        );
END TWDLROM_3_1;


ARCHITECTURE rtl OF TWDLROM_3_1 IS

  -- Constants
  CONSTANT Twiddle_re_table_data          : vector_of_signed32(0 TO 511) := 
    (to_signed(1073741824, 32), to_signed(1073740561, 32), to_signed(1073736771, 32), to_signed(1073730454, 32),
     to_signed(1073721611, 32), to_signed(1073710241, 32), to_signed(1073696345, 32), to_signed(1073679922, 32),
     to_signed(1073660973, 32), to_signed(1073639498, 32), to_signed(1073615496, 32), to_signed(1073588967, 32),
     to_signed(1073559913, 32), to_signed(1073528332, 32), to_signed(1073494225, 32), to_signed(1073457592, 32),
     to_signed(1073418433, 32), to_signed(1073376748, 32), to_signed(1073332538, 32), to_signed(1073285802, 32),
     to_signed(1073236540, 32), to_signed(1073184753, 32), to_signed(1073130440, 32), to_signed(1073073603, 32),
     to_signed(1073014240, 32), to_signed(1072952352, 32), to_signed(1072887940, 32), to_signed(1072821003, 32),
     to_signed(1072751542, 32), to_signed(1072679556, 32), to_signed(1072605046, 32), to_signed(1072528012, 32),
     to_signed(1072448455, 32), to_signed(1072366374, 32), to_signed(1072281769, 32), to_signed(1072194642, 32),
     to_signed(1072104991, 32), to_signed(1072012818, 32), to_signed(1071918122, 32), to_signed(1071820903, 32),
     to_signed(1071721163, 32), to_signed(1071618901, 32), to_signed(1071514117, 32), to_signed(1071406812, 32),
     to_signed(1071296985, 32), to_signed(1071184638, 32), to_signed(1071069770, 32), to_signed(1070952382, 32),
     to_signed(1070832474, 32), to_signed(1070710046, 32), to_signed(1070585099, 32), to_signed(1070457632, 32),
     to_signed(1070327646, 32), to_signed(1070195142, 32), to_signed(1070060120, 32), to_signed(1069922579, 32),
     to_signed(1069782521, 32), to_signed(1069639946, 32), to_signed(1069494854, 32), to_signed(1069347245, 32),
     to_signed(1069197120, 32), to_signed(1069044479, 32), to_signed(1068889322, 32), to_signed(1068731650, 32),
     to_signed(1068571464, 32), to_signed(1068408763, 32), to_signed(1068243547, 32), to_signed(1068075818, 32),
     to_signed(1067905576, 32), to_signed(1067732821, 32), to_signed(1067557554, 32), to_signed(1067379774, 32),
     to_signed(1067199483, 32), to_signed(1067016680, 32), to_signed(1066831367, 32), to_signed(1066643544, 32),
     to_signed(1066453210, 32), to_signed(1066260367, 32), to_signed(1066065015, 32), to_signed(1065867154, 32),
     to_signed(1065666786, 32), to_signed(1065463909, 32), to_signed(1065258526, 32), to_signed(1065050636, 32),
     to_signed(1064840240, 32), to_signed(1064627338, 32), to_signed(1064411931, 32), to_signed(1064194019, 32),
     to_signed(1063973603, 32), to_signed(1063750684, 32), to_signed(1063525261, 32), to_signed(1063297336, 32),
     to_signed(1063066909, 32), to_signed(1062833980, 32), to_signed(1062598550, 32), to_signed(1062360620, 32),
     to_signed(1062120190, 32), to_signed(1061877261, 32), to_signed(1061631833, 32), to_signed(1061383907, 32),
     to_signed(1061133483, 32), to_signed(1060880563, 32), to_signed(1060625146, 32), to_signed(1060367233, 32),
     to_signed(1060106826, 32), to_signed(1059843923, 32), to_signed(1059578527, 32), to_signed(1059310638, 32),
     to_signed(1059040255, 32), to_signed(1058767381, 32), to_signed(1058492016, 32), to_signed(1058214159, 32),
     to_signed(1057933813, 32), to_signed(1057650977, 32), to_signed(1057365653, 32), to_signed(1057077840, 32),
     to_signed(1056787540, 32), to_signed(1056494753, 32), to_signed(1056199480, 32), to_signed(1055901722, 32),
     to_signed(1055601479, 32), to_signed(1055298753, 32), to_signed(1054993543, 32), to_signed(1054685850, 32),
     to_signed(1054375676, 32), to_signed(1054063021, 32), to_signed(1053747885, 32), to_signed(1053430270, 32),
     to_signed(1053110176, 32), to_signed(1052787604, 32), to_signed(1052462555, 32), to_signed(1052135029, 32),
     to_signed(1051805027, 32), to_signed(1051472550, 32), to_signed(1051137599, 32), to_signed(1050800175, 32),
     to_signed(1050460278, 32), to_signed(1050117909, 32), to_signed(1049773069, 32), to_signed(1049425759, 32),
     to_signed(1049075980, 32), to_signed(1048723732, 32), to_signed(1048369016, 32), to_signed(1048011834, 32),
     to_signed(1047652185, 32), to_signed(1047290071, 32), to_signed(1046925492, 32), to_signed(1046558451, 32),
     to_signed(1046188946, 32), to_signed(1045816980, 32), to_signed(1045442553, 32), to_signed(1045065665, 32),
     to_signed(1044686319, 32), to_signed(1044304514, 32), to_signed(1043920252, 32), to_signed(1043533534, 32),
     to_signed(1043144360, 32), to_signed(1042752731, 32), to_signed(1042358649, 32), to_signed(1041962114, 32),
     to_signed(1041563127, 32), to_signed(1041161689, 32), to_signed(1040757802, 32), to_signed(1040351465, 32),
     to_signed(1039942680, 32), to_signed(1039531448, 32), to_signed(1039117770, 32), to_signed(1038701647, 32),
     to_signed(1038283080, 32), to_signed(1037862069, 32), to_signed(1037438617, 32), to_signed(1037012723, 32),
     to_signed(1036584389, 32), to_signed(1036153615, 32), to_signed(1035720404, 32), to_signed(1035284755, 32),
     to_signed(1034846671, 32), to_signed(1034406151, 32), to_signed(1033963197, 32), to_signed(1033517810, 32),
     to_signed(1033069992, 32), to_signed(1032619742, 32), to_signed(1032167062, 32), to_signed(1031711954, 32),
     to_signed(1031254418, 32), to_signed(1030794455, 32), to_signed(1030332067, 32), to_signed(1029867254, 32),
     to_signed(1029400018, 32), to_signed(1028930359, 32), to_signed(1028458280, 32), to_signed(1027983780, 32),
     to_signed(1027506862, 32), to_signed(1027027525, 32), to_signed(1026545772, 32), to_signed(1026061603, 32),
     to_signed(1025575020, 32), to_signed(1025086024, 32), to_signed(1024594615, 32), to_signed(1024100796, 32),
     to_signed(1023604567, 32), to_signed(1023105929, 32), to_signed(1022604883, 32), to_signed(1022101432, 32),
     to_signed(1021595575, 32), to_signed(1021087314, 32), to_signed(1020576651, 32), to_signed(1020063586, 32),
     to_signed(1019548121, 32), to_signed(1019030256, 32), to_signed(1018509994, 32), to_signed(1017987335, 32),
     to_signed(1017462281, 32), to_signed(1016934832, 32), to_signed(1016404991, 32), to_signed(1015872758, 32),
     to_signed(1015338134, 32), to_signed(1014801122, 32), to_signed(1014261721, 32), to_signed(1013719934, 32),
     to_signed(1013175761, 32), to_signed(1012629204, 32), to_signed(1012080264, 32), to_signed(1011528943, 32),
     to_signed(1010975242, 32), to_signed(1010419162, 32), to_signed(1009860704, 32), to_signed(1009299870, 32),
     to_signed(1008736660, 32), to_signed(1008171077, 32), to_signed(1007603122, 32), to_signed(1007032796, 32),
     to_signed(1006460100, 32), to_signed(1005885036, 32), to_signed(1005307605, 32), to_signed(1004727809, 32),
     to_signed(1004145648, 32), to_signed(1003561124, 32), to_signed(1002974239, 32), to_signed(1002384994, 32),
     to_signed(1001793390, 32), to_signed(1001199428, 32), to_signed(1000603111, 32), to_signed(1000004439, 32),
     to_signed(999403415, 32), to_signed(998800038, 32), to_signed(998194311, 32), to_signed(997586236, 32),
     to_signed(996975812, 32), to_signed(996363043, 32), to_signed(995747930, 32), to_signed(995130473, 32),
     to_signed(994510675, 32), to_signed(993888536, 32), to_signed(993264059, 32), to_signed(992637245, 32),
     to_signed(992008094, 32), to_signed(991376610, 32), to_signed(990742793, 32), to_signed(990106644, 32),
     to_signed(989468165, 32), to_signed(988827359, 32), to_signed(988184225, 32), to_signed(987538766, 32),
     to_signed(986890984, 32), to_signed(986240879, 32), to_signed(985588453, 32), to_signed(984933708, 32),
     to_signed(984276646, 32), to_signed(983617267, 32), to_signed(982955574, 32), to_signed(982291568, 32),
     to_signed(981625251, 32), to_signed(980956623, 32), to_signed(980285688, 32), to_signed(979612445, 32),
     to_signed(978936898, 32), to_signed(978259047, 32), to_signed(977578894, 32), to_signed(976896441, 32),
     to_signed(976211688, 32), to_signed(975524639, 32), to_signed(974835295, 32), to_signed(974143656, 32),
     to_signed(973449725, 32), to_signed(972753504, 32), to_signed(972054994, 32), to_signed(971354196, 32),
     to_signed(970651112, 32), to_signed(969945745, 32), to_signed(969238095, 32), to_signed(968528165, 32),
     to_signed(967815955, 32), to_signed(967101468, 32), to_signed(966384706, 32), to_signed(965665669, 32),
     to_signed(964944360, 32), to_signed(964220780, 32), to_signed(963494932, 32), to_signed(962766816, 32),
     to_signed(962036435, 32), to_signed(961303790, 32), to_signed(960568883, 32), to_signed(959831716, 32),
     to_signed(959092290, 32), to_signed(958350608, 32), to_signed(957606670, 32), to_signed(956860479, 32),
     to_signed(956112036, 32), to_signed(955361344, 32), to_signed(954608403, 32), to_signed(953853216, 32),
     to_signed(953095785, 32), to_signed(952336111, 32), to_signed(951574196, 32), to_signed(950810042, 32),
     to_signed(950043650, 32), to_signed(949275023, 32), to_signed(948504163, 32), to_signed(947731070, 32),
     to_signed(946955747, 32), to_signed(946178196, 32), to_signed(945398418, 32), to_signed(944616416, 32),
     to_signed(943832191, 32), to_signed(943045745, 32), to_signed(942257081, 32), to_signed(941466198, 32),
     to_signed(940673101, 32), to_signed(939877790, 32), to_signed(939080267, 32), to_signed(938280535, 32),
     to_signed(937478595, 32), to_signed(936674448, 32), to_signed(935868098, 32), to_signed(935059546, 32),
     to_signed(934248793, 32), to_signed(933435842, 32), to_signed(932620694, 32), to_signed(931803352, 32),
     to_signed(930983817, 32), to_signed(930162092, 32), to_signed(929338177, 32), to_signed(928512076, 32),
     to_signed(927683790, 32), to_signed(926853322, 32), to_signed(926020672, 32), to_signed(925185843, 32),
     to_signed(924348837, 32), to_signed(923509656, 32), to_signed(922668302, 32), to_signed(921824777, 32),
     to_signed(920979082, 32), to_signed(920131221, 32), to_signed(919281194, 32), to_signed(918429004, 32),
     to_signed(917574653, 32), to_signed(916718143, 32), to_signed(915859476, 32), to_signed(914998653, 32),
     to_signed(914135678, 32), to_signed(913270551, 32), to_signed(912403276, 32), to_signed(911533853, 32),
     to_signed(910662286, 32), to_signed(909788576, 32), to_signed(908912725, 32), to_signed(908034735, 32),
     to_signed(907154608, 32), to_signed(906272347, 32), to_signed(905387953, 32), to_signed(904501429, 32),
     to_signed(903612776, 32), to_signed(902721998, 32), to_signed(901829095, 32), to_signed(900934069, 32),
     to_signed(900036924, 32), to_signed(899137661, 32), to_signed(898236282, 32), to_signed(897332790, 32),
     to_signed(896427186, 32), to_signed(895519473, 32), to_signed(894609652, 32), to_signed(893697727, 32),
     to_signed(892783698, 32), to_signed(891867569, 32), to_signed(890949341, 32), to_signed(890029016, 32),
     to_signed(889106597, 32), to_signed(888182086, 32), to_signed(887255485, 32), to_signed(886326796, 32),
     to_signed(885396022, 32), to_signed(884463164, 32), to_signed(883528225, 32), to_signed(882591207, 32),
     to_signed(881652112, 32), to_signed(880710943, 32), to_signed(879767701, 32), to_signed(878822389, 32),
     to_signed(877875009, 32), to_signed(876925563, 32), to_signed(875974054, 32), to_signed(875020483, 32),
     to_signed(874064853, 32), to_signed(873107167, 32), to_signed(872147426, 32), to_signed(871185633, 32),
     to_signed(870221790, 32), to_signed(869255900, 32), to_signed(868287963, 32), to_signed(867317984, 32),
     to_signed(866345964, 32), to_signed(865371905, 32), to_signed(864395810, 32), to_signed(863417681, 32),
     to_signed(862437520, 32), to_signed(861455330, 32), to_signed(860471112, 32), to_signed(859484870, 32),
     to_signed(858496606, 32), to_signed(857506321, 32), to_signed(856514019, 32), to_signed(855519701, 32),
     to_signed(854523370, 32), to_signed(853525028, 32), to_signed(852524677, 32), to_signed(851522321, 32),
     to_signed(850517961, 32), to_signed(849511600, 32), to_signed(848503239, 32), to_signed(847492882, 32),
     to_signed(846480531, 32), to_signed(845466188, 32), to_signed(844449856, 32), to_signed(843431536, 32),
     to_signed(842411232, 32), to_signed(841388945, 32), to_signed(840364679, 32), to_signed(839338435, 32),
     to_signed(838310216, 32), to_signed(837280024, 32), to_signed(836247863, 32), to_signed(835213733, 32),
     to_signed(834177638, 32), to_signed(833139580, 32), to_signed(832099562, 32), to_signed(831057586, 32),
     to_signed(830013654, 32), to_signed(828967769, 32), to_signed(827919934, 32), to_signed(826870150, 32),
     to_signed(825818421, 32), to_signed(824764748, 32), to_signed(823709135, 32), to_signed(822651583, 32),
     to_signed(821592095, 32), to_signed(820530675, 32), to_signed(819467323, 32), to_signed(818402043, 32),
     to_signed(817334838, 32), to_signed(816265709, 32), to_signed(815194659, 32), to_signed(814121692, 32),
     to_signed(813046808, 32), to_signed(811970011, 32), to_signed(810891304, 32), to_signed(809810688, 32),
     to_signed(808728167, 32), to_signed(807643743, 32), to_signed(806557419, 32), to_signed(805469196, 32),
     to_signed(804379079, 32), to_signed(803287068, 32), to_signed(802193167, 32), to_signed(801097379, 32),
     to_signed(799999706, 32), to_signed(798900150, 32), to_signed(797798714, 32), to_signed(796695401, 32),
     to_signed(795590213, 32), to_signed(794483153, 32), to_signed(793374223, 32), to_signed(792263427, 32),
     to_signed(791150767, 32), to_signed(790036244, 32), to_signed(788919863, 32), to_signed(787801625, 32),
     to_signed(786681534, 32), to_signed(785559591, 32), to_signed(784435800, 32), to_signed(783310163, 32),
     to_signed(782182683, 32), to_signed(781053363, 32), to_signed(779922204, 32), to_signed(778789210, 32),
     to_signed(777654384, 32), to_signed(776517728, 32), to_signed(775379244, 32), to_signed(774238936, 32),
     to_signed(773096806, 32), to_signed(771952857, 32), to_signed(770807092, 32), to_signed(769659512, 32),
     to_signed(768510122, 32), to_signed(767358923, 32), to_signed(766205919, 32), to_signed(765051111, 32),
     to_signed(763894504, 32), to_signed(762736098, 32), to_signed(761575898, 32), to_signed(760413906, 32));  -- sfix32 [512]
  CONSTANT Twiddle_im_table_data          : vector_of_signed32(0 TO 511) := 
    (to_signed(0, 32), to_signed(-1647099, 32), to_signed(-3294193, 32), to_signed(-4941281, 32),
     to_signed(-6588356, 32), to_signed(-8235416, 32), to_signed(-9882456, 32), to_signed(-11529474, 32),
     to_signed(-13176464, 32), to_signed(-14823423, 32), to_signed(-16470347, 32), to_signed(-18117233, 32),
     to_signed(-19764076, 32), to_signed(-21410872, 32), to_signed(-23057618, 32), to_signed(-24704310, 32),
     to_signed(-26350943, 32), to_signed(-27997515, 32), to_signed(-29644021, 32), to_signed(-31290457, 32),
     to_signed(-32936819, 32), to_signed(-34583104, 32), to_signed(-36229307, 32), to_signed(-37875426, 32),
     to_signed(-39521455, 32), to_signed(-41167391, 32), to_signed(-42813230, 32), to_signed(-44458968, 32),
     to_signed(-46104602, 32), to_signed(-47750128, 32), to_signed(-49395541, 32), to_signed(-51040837, 32),
     to_signed(-52686014, 32), to_signed(-54331067, 32), to_signed(-55975992, 32), to_signed(-57620785, 32),
     to_signed(-59265442, 32), to_signed(-60909960, 32), to_signed(-62554335, 32), to_signed(-64198563, 32),
     to_signed(-65842639, 32), to_signed(-67486561, 32), to_signed(-69130324, 32), to_signed(-70773924, 32),
     to_signed(-72417357, 32), to_signed(-74060620, 32), to_signed(-75703709, 32), to_signed(-77346620, 32),
     to_signed(-78989349, 32), to_signed(-80631892, 32), to_signed(-82274245, 32), to_signed(-83916404, 32),
     to_signed(-85558366, 32), to_signed(-87200127, 32), to_signed(-88841683, 32), to_signed(-90483029, 32),
     to_signed(-92124163, 32), to_signed(-93765079, 32), to_signed(-95405776, 32), to_signed(-97046247, 32),
     to_signed(-98686491, 32), to_signed(-100326502, 32), to_signed(-101966277, 32), to_signed(-103605812, 32),
     to_signed(-105245103, 32), to_signed(-106884147, 32), to_signed(-108522939, 32), to_signed(-110161476, 32),
     to_signed(-111799753, 32), to_signed(-113437768, 32), to_signed(-115075515, 32), to_signed(-116712992, 32),
     to_signed(-118350194, 32), to_signed(-119987118, 32), to_signed(-121623759, 32), to_signed(-123260114, 32),
     to_signed(-124896179, 32), to_signed(-126531950, 32), to_signed(-128167423, 32), to_signed(-129802595, 32),
     to_signed(-131437462, 32), to_signed(-133072019, 32), to_signed(-134706263, 32), to_signed(-136340190, 32),
     to_signed(-137973796, 32), to_signed(-139607077, 32), to_signed(-141240030, 32), to_signed(-142872651, 32),
     to_signed(-144504935, 32), to_signed(-146136880, 32), to_signed(-147768480, 32), to_signed(-149399733, 32),
     to_signed(-151030634, 32), to_signed(-152661180, 32), to_signed(-154291367, 32), to_signed(-155921191, 32),
     to_signed(-157550647, 32), to_signed(-159179733, 32), to_signed(-160808445, 32), to_signed(-162436778, 32),
     to_signed(-164064728, 32), to_signed(-165692293, 32), to_signed(-167319468, 32), to_signed(-168946249, 32),
     to_signed(-170572633, 32), to_signed(-172198615, 32), to_signed(-173824192, 32), to_signed(-175449360, 32),
     to_signed(-177074115, 32), to_signed(-178698453, 32), to_signed(-180322371, 32), to_signed(-181945865, 32),
     to_signed(-183568930, 32), to_signed(-185191564, 32), to_signed(-186813762, 32), to_signed(-188435520, 32),
     to_signed(-190056834, 32), to_signed(-191677702, 32), to_signed(-193298119, 32), to_signed(-194918080, 32),
     to_signed(-196537583, 32), to_signed(-198156624, 32), to_signed(-199775198, 32), to_signed(-201393302, 32),
     to_signed(-203010932, 32), to_signed(-204628085, 32), to_signed(-206244756, 32), to_signed(-207860942, 32),
     to_signed(-209476638, 32), to_signed(-211091842, 32), to_signed(-212706549, 32), to_signed(-214320755, 32),
     to_signed(-215934457, 32), to_signed(-217547651, 32), to_signed(-219160334, 32), to_signed(-220772500, 32),
     to_signed(-222384147, 32), to_signed(-223995270, 32), to_signed(-225605867, 32), to_signed(-227215933, 32),
     to_signed(-228825464, 32), to_signed(-230434456, 32), to_signed(-232042906, 32), to_signed(-233650811, 32),
     to_signed(-235258165, 32), to_signed(-236864966, 32), to_signed(-238471210, 32), to_signed(-240076892, 32),
     to_signed(-241682010, 32), to_signed(-243286558, 32), to_signed(-244890535, 32), to_signed(-246493935, 32),
     to_signed(-248096755, 32), to_signed(-249698991, 32), to_signed(-251300640, 32), to_signed(-252901697, 32),
     to_signed(-254502159, 32), to_signed(-256102022, 32), to_signed(-257701283, 32), to_signed(-259299937, 32),
     to_signed(-260897982, 32), to_signed(-262495412, 32), to_signed(-264092224, 32), to_signed(-265688415, 32),
     to_signed(-267283981, 32), to_signed(-268878918, 32), to_signed(-270473223, 32), to_signed(-272066891, 32),
     to_signed(-273659918, 32), to_signed(-275252302, 32), to_signed(-276844038, 32), to_signed(-278435122, 32),
     to_signed(-280025552, 32), to_signed(-281615322, 32), to_signed(-283204430, 32), to_signed(-284792871, 32),
     to_signed(-286380643, 32), to_signed(-287967740, 32), to_signed(-289554160, 32), to_signed(-291139898, 32),
     to_signed(-292724951, 32), to_signed(-294309316, 32), to_signed(-295892988, 32), to_signed(-297475964, 32),
     to_signed(-299058239, 32), to_signed(-300639811, 32), to_signed(-302220676, 32), to_signed(-303800829, 32),
     to_signed(-305380268, 32), to_signed(-306958988, 32), to_signed(-308536985, 32), to_signed(-310114257, 32),
     to_signed(-311690799, 32), to_signed(-313266607, 32), to_signed(-314841679, 32), to_signed(-316416009, 32),
     to_signed(-317989595, 32), to_signed(-319562433, 32), to_signed(-321134518, 32), to_signed(-322705848, 32),
     to_signed(-324276419, 32), to_signed(-325846226, 32), to_signed(-327415267, 32), to_signed(-328983538, 32),
     to_signed(-330551034, 32), to_signed(-332117752, 32), to_signed(-333683689, 32), to_signed(-335248841, 32),
     to_signed(-336813204, 32), to_signed(-338376774, 32), to_signed(-339939549, 32), to_signed(-341501523, 32),
     to_signed(-343062693, 32), to_signed(-344623057, 32), to_signed(-346182609, 32), to_signed(-347741347, 32),
     to_signed(-349299266, 32), to_signed(-350856364, 32), to_signed(-352412636, 32), to_signed(-353968079, 32),
     to_signed(-355522689, 32), to_signed(-357076462, 32), to_signed(-358629395, 32), to_signed(-360181484, 32),
     to_signed(-361732726, 32), to_signed(-363283116, 32), to_signed(-364832652, 32), to_signed(-366381329, 32),
     to_signed(-367929144, 32), to_signed(-369476093, 32), to_signed(-371022173, 32), to_signed(-372567379, 32),
     to_signed(-374111709, 32), to_signed(-375655159, 32), to_signed(-377197725, 32), to_signed(-378739403, 32),
     to_signed(-380280190, 32), to_signed(-381820082, 32), to_signed(-383359076, 32), to_signed(-384897167, 32),
     to_signed(-386434353, 32), to_signed(-387970630, 32), to_signed(-389505993, 32), to_signed(-391040440, 32),
     to_signed(-392573967, 32), to_signed(-394106570, 32), to_signed(-395638246, 32), to_signed(-397168991, 32),
     to_signed(-398698801, 32), to_signed(-400227673, 32), to_signed(-401755603, 32), to_signed(-403282588, 32),
     to_signed(-404808624, 32), to_signed(-406333708, 32), to_signed(-407857835, 32), to_signed(-409381002, 32),
     to_signed(-410903207, 32), to_signed(-412424444, 32), to_signed(-413944711, 32), to_signed(-415464004, 32),
     to_signed(-416982319, 32), to_signed(-418499653, 32), to_signed(-420016002, 32), to_signed(-421531363, 32),
     to_signed(-423045732, 32), to_signed(-424559105, 32), to_signed(-426071480, 32), to_signed(-427582852, 32),
     to_signed(-429093217, 32), to_signed(-430602573, 32), to_signed(-432110916, 32), to_signed(-433618242, 32),
     to_signed(-435124548, 32), to_signed(-436629829, 32), to_signed(-438134084, 32), to_signed(-439637307, 32),
     to_signed(-441139496, 32), to_signed(-442640647, 32), to_signed(-444140756, 32), to_signed(-445639820, 32),
     to_signed(-447137835, 32), to_signed(-448634799, 32), to_signed(-450130706, 32), to_signed(-451625555, 32),
     to_signed(-453119340, 32), to_signed(-454612060, 32), to_signed(-456103710, 32), to_signed(-457594286, 32),
     to_signed(-459083786, 32), to_signed(-460572205, 32), to_signed(-462059541, 32), to_signed(-463545789, 32),
     to_signed(-465030947, 32), to_signed(-466515010, 32), to_signed(-467997976, 32), to_signed(-469479840, 32),
     to_signed(-470960600, 32), to_signed(-472440251, 32), to_signed(-473918791, 32), to_signed(-475396216, 32),
     to_signed(-476872522, 32), to_signed(-478347705, 32), to_signed(-479821764, 32), to_signed(-481294693, 32),
     to_signed(-482766489, 32), to_signed(-484237150, 32), to_signed(-485706671, 32), to_signed(-487175049, 32),
     to_signed(-488642281, 32), to_signed(-490108363, 32), to_signed(-491573292, 32), to_signed(-493037064, 32),
     to_signed(-494499676, 32), to_signed(-495961124, 32), to_signed(-497421405, 32), to_signed(-498880516, 32),
     to_signed(-500338453, 32), to_signed(-501795212, 32), to_signed(-503250791, 32), to_signed(-504705185, 32),
     to_signed(-506158392, 32), to_signed(-507610408, 32), to_signed(-509061229, 32), to_signed(-510510853, 32),
     to_signed(-511959275, 32), to_signed(-513406493, 32), to_signed(-514852502, 32), to_signed(-516297300, 32),
     to_signed(-517740883, 32), to_signed(-519183248, 32), to_signed(-520624391, 32), to_signed(-522064309, 32),
     to_signed(-523502998, 32), to_signed(-524940456, 32), to_signed(-526376678, 32), to_signed(-527811662, 32),
     to_signed(-529245404, 32), to_signed(-530677900, 32), to_signed(-532109148, 32), to_signed(-533539144, 32),
     to_signed(-534967884, 32), to_signed(-536395365, 32), to_signed(-537821584, 32), to_signed(-539246538, 32),
     to_signed(-540670223, 32), to_signed(-542092635, 32), to_signed(-543513772, 32), to_signed(-544933630, 32),
     to_signed(-546352205, 32), to_signed(-547769495, 32), to_signed(-549185496, 32), to_signed(-550600205, 32),
     to_signed(-552013618, 32), to_signed(-553425732, 32), to_signed(-554836544, 32), to_signed(-556246051, 32),
     to_signed(-557654248, 32), to_signed(-559061133, 32), to_signed(-560466703, 32), to_signed(-561870954, 32),
     to_signed(-563273883, 32), to_signed(-564675486, 32), to_signed(-566075761, 32), to_signed(-567474703, 32),
     to_signed(-568872310, 32), to_signed(-570268579, 32), to_signed(-571663506, 32), to_signed(-573057087, 32),
     to_signed(-574449320, 32), to_signed(-575840202, 32), to_signed(-577229728, 32), to_signed(-578617896, 32),
     to_signed(-580004702, 32), to_signed(-581390144, 32), to_signed(-582774218, 32), to_signed(-584156920, 32),
     to_signed(-585538248, 32), to_signed(-586918198, 32), to_signed(-588296766, 32), to_signed(-589673951, 32),
     to_signed(-591049748, 32), to_signed(-592424154, 32), to_signed(-593797166, 32), to_signed(-595168781, 32),
     to_signed(-596538995, 32), to_signed(-597907806, 32), to_signed(-599275210, 32), to_signed(-600641203, 32),
     to_signed(-602005783, 32), to_signed(-603368947, 32), to_signed(-604730691, 32), to_signed(-606091012, 32),
     to_signed(-607449906, 32), to_signed(-608807372, 32), to_signed(-610163404, 32), to_signed(-611518001, 32),
     to_signed(-612871159, 32), to_signed(-614222875, 32), to_signed(-615573145, 32), to_signed(-616921967, 32),
     to_signed(-618269338, 32), to_signed(-619615253, 32), to_signed(-620959711, 32), to_signed(-622302707, 32),
     to_signed(-623644239, 32), to_signed(-624984303, 32), to_signed(-626322897, 32), to_signed(-627660017, 32),
     to_signed(-628995660, 32), to_signed(-630329823, 32), to_signed(-631662503, 32), to_signed(-632993696, 32),
     to_signed(-634323400, 32), to_signed(-635651611, 32), to_signed(-636978327, 32), to_signed(-638303543, 32),
     to_signed(-639627258, 32), to_signed(-640949467, 32), to_signed(-642270169, 32), to_signed(-643589359, 32),
     to_signed(-644907034, 32), to_signed(-646223192, 32), to_signed(-647537830, 32), to_signed(-648850943, 32),
     to_signed(-650162530, 32), to_signed(-651472587, 32), to_signed(-652781111, 32), to_signed(-654088099, 32),
     to_signed(-655393548, 32), to_signed(-656697454, 32), to_signed(-657999816, 32), to_signed(-659300629, 32),
     to_signed(-660599890, 32), to_signed(-661897597, 32), to_signed(-663193747, 32), to_signed(-664488336, 32),
     to_signed(-665781362, 32), to_signed(-667072820, 32), to_signed(-668362709, 32), to_signed(-669651026, 32),
     to_signed(-670937767, 32), to_signed(-672222928, 32), to_signed(-673506508, 32), to_signed(-674788504, 32),
     to_signed(-676068911, 32), to_signed(-677347728, 32), to_signed(-678624950, 32), to_signed(-679900576, 32),
     to_signed(-681174602, 32), to_signed(-682447025, 32), to_signed(-683717842, 32), to_signed(-684987051, 32),
     to_signed(-686254647, 32), to_signed(-687520629, 32), to_signed(-688784993, 32), to_signed(-690047736, 32),
     to_signed(-691308855, 32), to_signed(-692568348, 32), to_signed(-693826211, 32), to_signed(-695082441, 32),
     to_signed(-696337036, 32), to_signed(-697589992, 32), to_signed(-698841307, 32), to_signed(-700090977, 32),
     to_signed(-701339000, 32), to_signed(-702585372, 32), to_signed(-703830092, 32), to_signed(-705073155, 32),
     to_signed(-706314559, 32), to_signed(-707554301, 32), to_signed(-708792378, 32), to_signed(-710028787, 32),
     to_signed(-711263525, 32), to_signed(-712496590, 32), to_signed(-713727978, 32), to_signed(-714957687, 32),
     to_signed(-716185713, 32), to_signed(-717412054, 32), to_signed(-718636707, 32), to_signed(-719859669, 32),
     to_signed(-721080937, 32), to_signed(-722300508, 32), to_signed(-723518380, 32), to_signed(-724734549, 32),
     to_signed(-725949013, 32), to_signed(-727161768, 32), to_signed(-728372813, 32), to_signed(-729582143, 32),
     to_signed(-730789757, 32), to_signed(-731995651, 32), to_signed(-733199822, 32), to_signed(-734402269, 32),
     to_signed(-735602987, 32), to_signed(-736801974, 32), to_signed(-737999228, 32), to_signed(-739194745, 32),
     to_signed(-740388522, 32), to_signed(-741580558, 32), to_signed(-742770848, 32), to_signed(-743959390, 32),
     to_signed(-745146182, 32), to_signed(-746331221, 32), to_signed(-747514503, 32), to_signed(-748696026, 32),
     to_signed(-749875788, 32), to_signed(-751053785, 32), to_signed(-752230015, 32), to_signed(-753404474, 32),
     to_signed(-754577161, 32), to_signed(-755748072, 32), to_signed(-756917205, 32), to_signed(-758084557, 32));  -- sfix32 [512]

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;

  -- HDL_SIM_INDEX_CHECK: Enabled by the "SimIndexCheck" option.
  FUNCTION hdl_sim_index_check(addr : integer; low: integer; high: integer ) RETURN integer IS
  BEGIN
    --pragma translate off
    IF addr >= low AND addr <= high THEN
      RETURN addr;
    ELSE
      -- Index out of bounds. Undefined result. Return arbitrary value in range.
      RETURN low;
    END IF;
    --pragma translate on
    return addr;
  END FUNCTION;


  -- Signals
  SIGNAL Radix22TwdlMapping_cnt           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Radix22TwdlMapping_phase         : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Radix22TwdlMapping_octantReg1    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Radix22TwdlMapping_twdlAddr_raw  : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Radix22TwdlMapping_twdlAddrMap   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Radix22TwdlMapping_twdl45Reg     : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg1      : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg2      : std_logic;
  SIGNAL Radix22TwdlMapping_cnt_next      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Radix22TwdlMapping_phase_next    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Radix22TwdlMapping_octantReg1_next : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Radix22TwdlMapping_twdlAddr_raw_next : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Radix22TwdlMapping_twdlAddrMap_next : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Radix22TwdlMapping_twdl45Reg_next : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg1_next : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg2_next : std_logic;
  SIGNAL twdlAddr                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL twdlAddrVld                      : std_logic;
  SIGNAL twdlOctant                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL twdl45                           : std_logic;
  SIGNAL twiddleS_re                      : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twiddleReg_re                    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twiddleS_im                      : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twiddleReg_im                    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twdlOctantReg                    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL twdl45Reg                        : std_logic;
  SIGNAL twdl_3_1_re_tmp                  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twdl_3_1_im_tmp                  : signed(31 DOWNTO 0);  -- sfix32_En30

BEGIN
  -- Radix22TwdlMapping
  Radix22TwdlMapping_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Radix22TwdlMapping_octantReg1 <= to_unsigned(16#0#, 3);
      Radix22TwdlMapping_twdlAddr_raw <= to_unsigned(16#000#, 12);
      Radix22TwdlMapping_twdlAddrMap <= to_unsigned(16#000#, 9);
      Radix22TwdlMapping_twdl45Reg <= '0';
      Radix22TwdlMapping_dvldReg1 <= '0';
      Radix22TwdlMapping_dvldReg2 <= '0';
      Radix22TwdlMapping_cnt <= to_unsigned(16#000#, 10);
      Radix22TwdlMapping_phase <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Radix22TwdlMapping_cnt <= Radix22TwdlMapping_cnt_next;
        Radix22TwdlMapping_phase <= Radix22TwdlMapping_phase_next;
        Radix22TwdlMapping_octantReg1 <= Radix22TwdlMapping_octantReg1_next;
        Radix22TwdlMapping_twdlAddr_raw <= Radix22TwdlMapping_twdlAddr_raw_next;
        Radix22TwdlMapping_twdlAddrMap <= Radix22TwdlMapping_twdlAddrMap_next;
        Radix22TwdlMapping_twdl45Reg <= Radix22TwdlMapping_twdl45Reg_next;
        Radix22TwdlMapping_dvldReg1 <= Radix22TwdlMapping_dvldReg1_next;
        Radix22TwdlMapping_dvldReg2 <= Radix22TwdlMapping_dvldReg2_next;
      END IF;
    END IF;
  END PROCESS Radix22TwdlMapping_process;

  Radix22TwdlMapping_output : PROCESS (Radix22TwdlMapping_cnt, Radix22TwdlMapping_dvldReg1,
       Radix22TwdlMapping_dvldReg2, Radix22TwdlMapping_octantReg1,
       Radix22TwdlMapping_phase, Radix22TwdlMapping_twdl45Reg,
       Radix22TwdlMapping_twdlAddrMap, Radix22TwdlMapping_twdlAddr_raw,
       dout_2_1_vld)
    VARIABLE octant : unsigned(2 DOWNTO 0);
    VARIABLE cnt_cast : unsigned(11 DOWNTO 0);
    VARIABLE sub_cast : signed(25 DOWNTO 0);
    VARIABLE sub_temp : signed(25 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(13 DOWNTO 0);
    VARIABLE sub_temp_0 : signed(13 DOWNTO 0);
    VARIABLE sub_cast_1 : signed(13 DOWNTO 0);
    VARIABLE sub_temp_1 : signed(13 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_2 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_3 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_3 : signed(25 DOWNTO 0);
  BEGIN
    sub_temp := to_signed(16#0000000#, 26);
    sub_temp_0 := to_signed(16#0000#, 14);
    sub_temp_1 := to_signed(16#0000#, 14);
    sub_temp_2 := to_signed(16#0000000#, 26);
    sub_temp_3 := to_signed(16#0000000#, 26);
    cnt_cast := to_unsigned(16#000#, 12);
    sub_cast := to_signed(16#0000000#, 26);
    sub_cast_0 := to_signed(16#0000#, 14);
    sub_cast_1 := to_signed(16#0000#, 14);
    sub_cast_2 := to_signed(16#0000000#, 26);
    sub_cast_3 := to_signed(16#0000000#, 26);
    Radix22TwdlMapping_cnt_next <= Radix22TwdlMapping_cnt;
    Radix22TwdlMapping_phase_next <= Radix22TwdlMapping_phase;
    Radix22TwdlMapping_twdlAddr_raw_next <= Radix22TwdlMapping_twdlAddr_raw;
    Radix22TwdlMapping_twdlAddrMap_next <= Radix22TwdlMapping_twdlAddrMap;
    Radix22TwdlMapping_twdl45Reg_next <= Radix22TwdlMapping_twdl45Reg;
    Radix22TwdlMapping_dvldReg2_next <= Radix22TwdlMapping_dvldReg1;
    Radix22TwdlMapping_dvldReg1_next <= dout_2_1_vld;
    CASE Radix22TwdlMapping_twdlAddr_raw IS
      WHEN "001000000000" =>
        octant := to_unsigned(16#0#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN "010000000000" =>
        octant := to_unsigned(16#1#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
      WHEN "011000000000" =>
        octant := to_unsigned(16#2#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN "100000000000" =>
        octant := to_unsigned(16#3#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
      WHEN "101000000000" =>
        octant := to_unsigned(16#4#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN OTHERS => 
        octant := Radix22TwdlMapping_twdlAddr_raw(11 DOWNTO 9);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
    END CASE;
    Radix22TwdlMapping_octantReg1_next <= octant;
    CASE octant IS
      WHEN "000" =>
        Radix22TwdlMapping_twdlAddrMap_next <= Radix22TwdlMapping_twdlAddr_raw(8 DOWNTO 0);
      WHEN "001" =>
        sub_cast_0 := signed(resize(Radix22TwdlMapping_twdlAddr_raw, 14));
        sub_temp_0 := to_signed(16#0400#, 14) - sub_cast_0;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_0(8 DOWNTO 0));
      WHEN "010" =>
        sub_cast_1 := signed(resize(Radix22TwdlMapping_twdlAddr_raw, 14));
        sub_temp_1 := sub_cast_1 - to_signed(16#0400#, 14);
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_1(8 DOWNTO 0));
      WHEN "011" =>
        sub_cast_2 := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
        sub_temp_2 := to_signed(16#0100000#, 26) - sub_cast_2;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_2(17 DOWNTO 9));
      WHEN "100" =>
        sub_cast_3 := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
        sub_temp_3 := sub_cast_3 - to_signed(16#0100000#, 26);
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_3(17 DOWNTO 9));
      WHEN OTHERS => 
        sub_cast := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
        sub_temp := to_signed(16#0180000#, 26) - sub_cast;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp(17 DOWNTO 9));
    END CASE;
    IF Radix22TwdlMapping_phase = to_unsigned(16#0#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= to_unsigned(16#000#, 12);
    ELSIF Radix22TwdlMapping_phase = to_unsigned(16#1#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= resize(Radix22TwdlMapping_cnt, 12) sll 1;
    ELSIF Radix22TwdlMapping_phase = to_unsigned(16#2#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= resize(Radix22TwdlMapping_cnt, 12);
    ELSE 
      cnt_cast := resize(Radix22TwdlMapping_cnt, 12);
      Radix22TwdlMapping_twdlAddr_raw_next <= (cnt_cast sll 1) + cnt_cast;
    END IF;
    IF (dout_2_1_vld AND hdlcoder_to_stdlogic(Radix22TwdlMapping_cnt > to_unsigned(16#3FE#, 10))) = '1' THEN 
      Radix22TwdlMapping_phase_next <= Radix22TwdlMapping_phase + to_unsigned(16#1#, 2);
    END IF;
    IF dout_2_1_vld = '1' THEN 
      Radix22TwdlMapping_cnt_next <= Radix22TwdlMapping_cnt + to_unsigned(16#001#, 10);
    END IF;
    twdlAddr <= Radix22TwdlMapping_twdlAddrMap;
    twdlAddrVld <= Radix22TwdlMapping_dvldReg2;
    twdlOctant <= Radix22TwdlMapping_octantReg1;
    twdl45 <= Radix22TwdlMapping_twdl45Reg;
  END PROCESS Radix22TwdlMapping_output;


  -- Twiddle ROM1
  twiddleS_re <= Twiddle_re_table_data(hdl_sim_index_check(to_integer(twdlAddr), 0, 511));

  TWIDDLEROM_RE_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twiddleReg_re <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twiddleReg_re <= twiddleS_re;
      END IF;
    END IF;
  END PROCESS TWIDDLEROM_RE_process;


  -- Twiddle ROM2
  twiddleS_im <= Twiddle_im_table_data(hdl_sim_index_check(to_integer(twdlAddr), 0, 511));

  TWIDDLEROM_IM_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twiddleReg_im <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twiddleReg_im <= twiddleS_im;
      END IF;
    END IF;
  END PROCESS TWIDDLEROM_IM_process;


  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdlOctantReg <= to_unsigned(16#0#, 3);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twdlOctantReg <= twdlOctant;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdl45Reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twdl45Reg <= twdl45;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  -- Radix22TwdlOctCorr
  Radix22TwdlOctCorr_output : PROCESS (twdl45Reg, twdlOctantReg, twiddleReg_im, twiddleReg_re)
    VARIABLE twdlIn_re : signed(31 DOWNTO 0);
    VARIABLE twdlIn_im : signed(31 DOWNTO 0);
    VARIABLE cast : signed(32 DOWNTO 0);
    VARIABLE cast_0 : signed(32 DOWNTO 0);
    VARIABLE cast_1 : signed(32 DOWNTO 0);
    VARIABLE cast_2 : signed(32 DOWNTO 0);
    VARIABLE cast_3 : signed(32 DOWNTO 0);
    VARIABLE cast_4 : signed(32 DOWNTO 0);
    VARIABLE cast_5 : signed(32 DOWNTO 0);
    VARIABLE cast_6 : signed(32 DOWNTO 0);
    VARIABLE cast_7 : signed(32 DOWNTO 0);
    VARIABLE cast_8 : signed(32 DOWNTO 0);
    VARIABLE cast_9 : signed(32 DOWNTO 0);
    VARIABLE cast_10 : signed(32 DOWNTO 0);
  BEGIN
    cast_0 := to_signed(0, 33);
    cast_2 := to_signed(0, 33);
    cast_4 := to_signed(0, 33);
    cast_6 := to_signed(0, 33);
    cast_8 := to_signed(0, 33);
    cast_10 := to_signed(0, 33);
    cast := to_signed(0, 33);
    cast_1 := to_signed(0, 33);
    cast_3 := to_signed(0, 33);
    cast_5 := to_signed(0, 33);
    cast_7 := to_signed(0, 33);
    cast_9 := to_signed(0, 33);
    twdlIn_re := twiddleReg_re;
    twdlIn_im := twiddleReg_im;
    IF twdl45Reg = '1' THEN 
      CASE twdlOctantReg IS
        WHEN "000" =>
          twdlIn_re := to_signed(759250125, 32);
          twdlIn_im := to_signed(-759250125, 32);
        WHEN "010" =>
          twdlIn_re := to_signed(-759250125, 32);
          twdlIn_im := to_signed(-759250125, 32);
        WHEN "100" =>
          twdlIn_re := to_signed(-759250125, 32);
          twdlIn_im := to_signed(759250125, 32);
        WHEN OTHERS => 
          twdlIn_re := to_signed(759250125, 32);
          twdlIn_im := to_signed(-759250125, 32);
      END CASE;
    ELSE 
      CASE twdlOctantReg IS
        WHEN "000" =>
          NULL;
        WHEN "001" =>
          cast := resize(twiddleReg_im, 33);
          cast_0 :=  - (cast);
          twdlIn_re := cast_0(31 DOWNTO 0);
          cast_5 := resize(twiddleReg_re, 33);
          cast_6 :=  - (cast_5);
          twdlIn_im := cast_6(31 DOWNTO 0);
        WHEN "010" =>
          twdlIn_re := twiddleReg_im;
          cast_7 := resize(twiddleReg_re, 33);
          cast_8 :=  - (cast_7);
          twdlIn_im := cast_8(31 DOWNTO 0);
        WHEN "011" =>
          cast_1 := resize(twiddleReg_re, 33);
          cast_2 :=  - (cast_1);
          twdlIn_re := cast_2(31 DOWNTO 0);
          twdlIn_im := twiddleReg_im;
        WHEN "100" =>
          cast_3 := resize(twiddleReg_re, 33);
          cast_4 :=  - (cast_3);
          twdlIn_re := cast_4(31 DOWNTO 0);
          cast_9 := resize(twiddleReg_im, 33);
          cast_10 :=  - (cast_9);
          twdlIn_im := cast_10(31 DOWNTO 0);
        WHEN OTHERS => 
          twdlIn_re := twiddleReg_im;
          twdlIn_im := twiddleReg_re;
      END CASE;
    END IF;
    twdl_3_1_re_tmp <= twdlIn_re;
    twdl_3_1_im_tmp <= twdlIn_im;
  END PROCESS Radix22TwdlOctCorr_output;


  twdl_3_1_re <= std_logic_vector(twdl_3_1_re_tmp);

  twdl_3_1_im <= std_logic_vector(twdl_3_1_im_tmp);

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdl_3_1_vld <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twdl_3_1_vld <= twdlAddrVld;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


END rtl;

