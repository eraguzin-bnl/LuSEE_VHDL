-- -------------------------------------------------------------
-- 
-- File Name: /u/home/eraguzin/matlab/LNspec/matlab/codegen/average__instance_P2_/hdlsrc/average_instance_P2_fixpt.vhd
-- Created: 2023-01-19 10:48:25
-- 
-- Generated by MATLAB 9.12, MATLAB Coder 5.4 and HDL Coder 3.20
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- outpk                         ce_out        1
-- outbin                        ce_out        1
-- ready_out                     ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: average_instance_P2_fixpt
-- Source Path: average__instance_P2__fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY average_instance_P2_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        ch1_val_re                        :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        ch1_val_im                        :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        ch2_val_re                        :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        ch2_val_im                        :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        count                             :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
        ready_in                          :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        outpk                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32_E14
        outbin                            :   OUT   std_logic_vector(10 DOWNTO 0);  -- ufix11
        ready_out                         :   OUT   std_logic
        );
END average_instance_P2_fixpt;


ARCHITECTURE rtl OF average_instance_P2_fixpt IS

  -- Component Declarations
  COMPONENT SimpleDualPortRAM_generic
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;  -- ufix1
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          rd_dout                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SimpleDualPortRAM_generic
    USE ENTITY work.SimpleDualPortRAM_generic(rtl);

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL stateControl_1                   : std_logic;
  SIGNAL enb_gated                        : std_logic;
  SIGNAL ticktock                         : std_logic;
  SIGNAL tmp                              : std_logic;
  SIGNAL tmp_1                            : std_logic;
  SIGNAL ticktock_1                       : std_logic;
  SIGNAL ticktock_last_value              : std_logic;
  SIGNAL tmp_2                            : std_logic;
  SIGNAL Nac                              : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL stateControl_3                   : std_logic;
  SIGNAL enb_gated_1                      : std_logic;
  SIGNAL in1_unsigned                     : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Nac_1                            : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Nac_2                            : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL p10Nac_1                         : std_logic;
  SIGNAL p10Nac_sub_cast                  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL tmp_3                            : std_logic;
  SIGNAL tmp_4                            : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Nac_3                            : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Nac_last_value                   : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL tmp_5                            : std_logic;
  SIGNAL tmp_6                            : std_logic;
  SIGNAL outpk_1                          : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL outpk_2                          : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL to2val                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_7                            : std_logic;
  SIGNAL ctr_0_sig                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL lastCycle                        : std_logic;
  SIGNAL val                              : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL addr                             : signed(31 DOWNTO 0);  -- int32
  SIGNAL stateControl_5                   : std_logic;
  SIGNAL to2adr                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL count_unsigned                   : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL tmp_8                            : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL p89tmp_cast                      : unsigned(13 DOWNTO 0);  -- ufix14_En1
  SIGNAL p89tmp_cast_1                    : unsigned(13 DOWNTO 0);  -- ufix14_En1
  SIGNAL p89tmp_add_cast                  : unsigned(14 DOWNTO 0);  -- ufix15_En1
  SIGNAL p89tmp_add_temp                  : unsigned(14 DOWNTO 0);  -- ufix15_En1
  SIGNAL tmp_9                            : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL enb_gated_2                      : std_logic;
  SIGNAL tmp_10                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL to2adr_1                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL to2adr_2                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL to2adr_last_value                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_11                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p56tmp_sub_cast                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_12                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL indexLogic_fixptsig              : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL tmp_13                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p87tmp_sub_cast                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL addr_1                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_14                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL indexLogic_fixptsig_1            : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL stateControl_7                   : std_logic;
  SIGNAL tmp_15                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL ch1_val_re_signed                : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL ch1_val_im_signed                : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL ar                               : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL ch2_val_re_signed                : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL ch2_val_im_signed                : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL y_re                             : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL y_im                             : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL p80y_cast                        : signed(32 DOWNTO 0);  -- sfix33_En7
  SIGNAL p80y_cast_1                      : signed(32 DOWNTO 0);  -- sfix33_En7
  SIGNAL br                               : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL ai                               : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL bi                               : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL P                                : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL p75P_mul_temp                    : signed(63 DOWNTO 0);  -- sfix64_En14
  SIGNAL p75P_sub_cast                    : signed(64 DOWNTO 0);  -- sfix65_En14
  SIGNAL p75P_mul_temp_1                  : signed(63 DOWNTO 0);  -- sfix64_En14
  SIGNAL p75P_sub_cast_1                  : signed(64 DOWNTO 0);  -- sfix65_En14
  SIGNAL p75P_sub_temp                    : signed(64 DOWNTO 0);  -- sfix65_En14
  SIGNAL p75P_mul_temp_2                  : signed(97 DOWNTO 0);  -- sfix98_En47
  SIGNAL p75P_cast                        : signed(96 DOWNTO 0);  -- sfix97_En47
  SIGNAL enb_gated_3                      : std_logic;
  SIGNAL buf2_ram_wrenb                   : std_logic;  -- ufix1
  SIGNAL to2val_1                         : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_16                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL to2val_2                         : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_17                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_18                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL buf2                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL buf2_unsigned                    : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL buf2_1                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL buf2_last_value                  : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_19                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL p54to2val_add_cast               : unsigned(33 DOWNTO 0);  -- ufix34_E13
  SIGNAL p54to2val_add_cast_1             : unsigned(33 DOWNTO 0);  -- ufix34_E13
  SIGNAL p54to2val_add_temp               : unsigned(33 DOWNTO 0);  -- ufix34_E13
  SIGNAL to2val_3                         : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_20                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_21                           : std_logic;
  SIGNAL tmp_22                           : std_logic;
  SIGNAL to1val                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_23                           : std_logic;
  SIGNAL lastCycle_1                      : std_logic;
  SIGNAL val_1                            : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL stateControl_9                   : std_logic;
  SIGNAL to1adr                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_24                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL p92tmp_cast                      : unsigned(13 DOWNTO 0);  -- ufix14_En1
  SIGNAL p92tmp_cast_1                    : unsigned(13 DOWNTO 0);  -- ufix14_En1
  SIGNAL p92tmp_add_cast                  : unsigned(45 DOWNTO 0);  -- ufix46_En32
  SIGNAL p92tmp_add_temp                  : unsigned(45 DOWNTO 0);  -- ufix46_En32
  SIGNAL tmp_25                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL enb_gated_4                      : std_logic;
  SIGNAL tmp_26                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL to1adr_1                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL to1adr_2                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL to1adr_last_value                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_27                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p55tmp_sub_cast                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL addr_2                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_28                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL indexLogic_fixptsig_2            : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL addr_3                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_29                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p90tmp_sub_cast                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_30                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL indexLogic_fixptsig_3            : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL stateControl_11                  : std_logic;
  SIGNAL tmp_31                           : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL enb_gated_5                      : std_logic;
  SIGNAL buf1_ram_wrenb                   : std_logic;  -- ufix1
  SIGNAL to1val_1                         : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_32                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL to1val_2                         : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_33                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_34                           : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL tmp_35                           : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL buf1                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL buf1_unsigned                    : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL buf1_1                           : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL buf1_last_value                  : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL tmp_36                           : unsigned(31 DOWNTO 0);  -- ufix32_E13
  SIGNAL p45to1val_add_cast               : unsigned(32 DOWNTO 0);  -- ufix33_E13
  SIGNAL p45to1val_add_cast_1             : unsigned(32 DOWNTO 0);  -- ufix33_E13
  SIGNAL p45to1val_add_temp               : unsigned(32 DOWNTO 0);  -- ufix33_E13
  SIGNAL to1val_3                         : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_37                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_38                           : unsigned(31 DOWNTO 0);  -- ufix32_E14
  SIGNAL tmp_39                           : std_logic;
  SIGNAL outbin_1                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_40                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_41                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_42                           : std_logic;
  SIGNAL tmp_43                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_44                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_45                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL outbin_tmp                       : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_46                           : std_logic;
  SIGNAL ready_out_1                      : std_logic;
  SIGNAL ready_out_2                      : std_logic;
  SIGNAL tmp_47                           : std_logic;
  SIGNAL tmp_48                           : std_logic;
  SIGNAL ready_out_3                      : std_logic;
  SIGNAL tmp_49                           : std_logic;
  SIGNAL tmp_50                           : std_logic;

BEGIN
  u_buf2_ram : SimpleDualPortRAM_generic
    GENERIC MAP( AddrWidth => 12,
                 DataWidth => 32
                 )
    PORT MAP( clk => clk,
              enb => enb_gated_3,
              wr_din => std_logic_vector(tmp_18),
              wr_addr => std_logic_vector(indexLogic_fixptsig),
              wr_en => buf2_ram_wrenb,  -- ufix1
              rd_addr => std_logic_vector(indexLogic_fixptsig_1),
              rd_dout => buf2
              );

  u_buf1_ram_generic : SimpleDualPortRAM_generic
    GENERIC MAP( AddrWidth => 11,
                 DataWidth => 32
                 )
    PORT MAP( clk => clk,
              enb => enb_gated_5,
              wr_din => std_logic_vector(tmp_35),
              wr_addr => std_logic_vector(indexLogic_fixptsig_2),
              wr_en => buf1_ram_wrenb,  -- ufix1
              rd_addr => std_logic_vector(indexLogic_fixptsig_3),
              rd_dout => buf1
              );

  stateControl_1 <= '1';

  enb_gated <= stateControl_1 AND enb;

  -- 'average__instance_P2__fixpt:45' else
  -- 
  -- 'average__instance_P2__fixpt:46' if (ready_in)
  -- 
  -- 'average__instance_P2__fixpt:48' else
  -- 
  -- 'average__instance_P2__fixpt:49' to2adr(:) = int16(2048/2+1);
  -- 
  -- 'average__instance_P2__fixpt:47' to2adr(:) = fi_div_by_shift(count, 1)+fi(1, 0, 1, 0, fm);
  -- 
  -- 'average__instance_P2__fixpt:72' coder.inline( 'always' );
  -- 
  -- 'average__instance_P2__fixpt:73' if isfi( a )
  -- 
  -- 'average__instance_P2__fixpt:74' nt = numerictype( a );
  -- 
  -- 'average__instance_P2__fixpt:75' fm = fimath( a );
  -- 
  -- 'average__instance_P2__fixpt:76' nt_bs = numerictype( nt.Signed, nt.WordLength + shift_len, nt.FractionLength + 
  -- shift_len )
  -- 
  -- 'average__instance_P2__fixpt:77' y = bitsra( fi( a, nt_bs, fm ), shift_len );
  tmp <=  NOT ticktock;

  ticktock_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ticktock_1 <= '1';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        ticktock_1 <= tmp_1;
      END IF;
    END IF;
  END PROCESS ticktock_reg_process;


  out0_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ticktock_last_value <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        ticktock_last_value <= ticktock;
      END IF;
    END IF;
  END PROCESS out0_bypass_process;


  
  ticktock <= ticktock_last_value WHEN stateControl_1 = '0' ELSE
      ticktock_1;

  -- 'average__instance_P2__fixpt:27' if (ready_in)
  -- 
  -- part will be replaced by preprocessor
  
  tmp_1 <= ticktock WHEN ready_in = '0' ELSE
      tmp;

  enb <= clk_enable;

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      tmp_2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        tmp_2 <= tmp_1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  -- HDL code generation from MATLAB function: average__instance_P2__fixpt
  Nac <= to_unsigned(16#4#, 3);

  stateControl_3 <= '1';

  enb_gated_1 <= stateControl_3 AND enb;

  in1_unsigned <= unsigned(count);

  -- 'average__instance_P2__fixpt:62' Nac(:) = Nac - ((ready_in) & (count == fi(1, 0, 1, 0, fm)));
  p10Nac_1 <= ready_in AND hdlcoder_to_stdlogic(in1_unsigned = to_unsigned(16#0001#, 13));
  p10Nac_sub_cast <= '0' & '0' & p10Nac_1;
  Nac_2 <= Nac_1 - p10Nac_sub_cast;

  -- 'average__instance_P2__fixpt:63' if (Nac == fi(0, 0, 1, 0, fm))
  
  tmp_3 <= '1' WHEN Nac_2 = to_unsigned(16#0#, 3) ELSE
      '0';

  
  tmp_4 <= Nac_2 WHEN tmp_3 = '0' ELSE
      Nac;

  Nac_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Nac_3 <= to_unsigned(16#4#, 3);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_1 = '1' THEN
        Nac_3 <= tmp_4;
      END IF;
    END IF;
  END PROCESS Nac_reg_process;


  out0_bypass_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Nac_last_value <= to_unsigned(16#0#, 3);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_1 = '1' THEN
        Nac_last_value <= Nac_1;
      END IF;
    END IF;
  END PROCESS out0_bypass_1_process;


  
  Nac_1 <= Nac_last_value WHEN stateControl_3 = '0' ELSE
      Nac_3;

  tmp_5 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  delayMatch_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      tmp_6 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        tmp_6 <= tmp_5;
      END IF;
    END IF;
  END PROCESS delayMatch_1_process;


  -- 'average__instance_P2__fixpt:25' outpk = fi(0, 0, 32, -14, fm);
  outpk_1 <= to_unsigned(0, 32);

  reduced_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      outpk_2 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        outpk_2 <= outpk_1;
      END IF;
    END IF;
  END PROCESS reduced_process;


  to2val <= to_unsigned(0, 32);

  tmp_7 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 0
  ctr_0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ctr_0_sig <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        ctr_0_sig <= to_unsigned(16#00#, 8);
      END IF;
    END IF;
  END PROCESS ctr_0_process;


  
  lastCycle <= '1' WHEN ctr_0_sig = to_unsigned(16#00#, 8) ELSE
      '0';

  val <= to_unsigned(0, 32);

  addr <= to_signed(16#00000802#, 32);

  stateControl_5 <= '1';

  to2adr <= to_unsigned(16#401#, 11);

  count_unsigned <= unsigned(count);

  -- 'average__instance_P2__fixpt:51' to2val(:) = buf2(to2adr)+P;
  -- 
  -- 'average__instance_P2__fixpt:32' if (ready_in)
  -- 
  -- 'average__instance_P2__fixpt:34' else
  -- 
  -- 'average__instance_P2__fixpt:35' to1adr(:) = int16(2048/2+1);
  -- 
  -- 'average__instance_P2__fixpt:33' to1adr(:) = fi_div_by_shift(count, 1)+fi(0.5, 0, 32, 32, fm);
  -- 
  -- 'average__instance_P2__fixpt:72' coder.inline( 'always' );
  -- 
  -- 'average__instance_P2__fixpt:73' if isfi( a )
  -- 
  -- 'average__instance_P2__fixpt:74' nt = numerictype( a );
  -- 
  -- 'average__instance_P2__fixpt:75' fm = fimath( a );
  -- 
  -- 'average__instance_P2__fixpt:76' nt_bs = numerictype( nt.Signed, nt.WordLength + shift_len, nt.FractionLength + 
  -- shift_len )
  -- 
  -- 'average__instance_P2__fixpt:77' y = bitsra( fi( a, nt_bs, fm ), shift_len );
  p89tmp_cast <= count_unsigned & '0';
  p89tmp_cast_1 <= SHIFT_RIGHT(p89tmp_cast, 1);
  p89tmp_add_cast <= resize(p89tmp_cast_1, 15);
  p89tmp_add_temp <= p89tmp_add_cast + to_unsigned(16#0002#, 15);
  tmp_8 <= p89tmp_add_temp(11 DOWNTO 1);

  
  tmp_9 <= to2adr WHEN ready_in = '0' ELSE
      tmp_8;

  enb_gated_2 <= stateControl_5 AND enb;

  to2adr_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to2adr_1 <= to_unsigned(16#401#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_2 = '1' THEN
        to2adr_1 <= tmp_10;
      END IF;
    END IF;
  END PROCESS to2adr_reg_process;


  out0_bypass_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to2adr_last_value <= to_unsigned(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_2 = '1' THEN
        to2adr_last_value <= to2adr_2;
      END IF;
    END IF;
  END PROCESS out0_bypass_2_process;


  
  to2adr_2 <= to2adr_last_value WHEN stateControl_5 = '0' ELSE
      to2adr_1;

  
  tmp_10 <= tmp_9 WHEN tmp_1 = '0' ELSE
      to2adr_2;

  -- HDL code generation from MATLAB function: average__instance_P2__fixpt_trueregionp29
  p56tmp_sub_cast <= signed(resize(tmp_10, 32));
  tmp_11 <= p56tmp_sub_cast - 1;

  
  tmp_12 <= addr WHEN tmp_1 = '0' ELSE
      tmp_11;

  indexLogic_fixptsig <= unsigned(tmp_12(11 DOWNTO 0));

  -- HDL code generation from MATLAB function: average__instance_P2__fixpt_falseregionp64
  p87tmp_sub_cast <= signed(resize(tmp_9, 32));
  tmp_13 <= p87tmp_sub_cast - 1;

  addr_1 <= to_signed(16#00000802#, 32);

  
  tmp_14 <= tmp_13 WHEN tmp_1 = '0' ELSE
      addr_1;

  indexLogic_fixptsig_1 <= unsigned(tmp_14(11 DOWNTO 0));

  stateControl_7 <= '1';

  -- 'average__instance_P2__fixpt:28' ticktock(:) = ~ticktock;
  tmp_15 <= to_unsigned(0, 32);

  ch1_val_re_signed <= signed(ch1_val_re);

  ch1_val_im_signed <= signed(ch1_val_im);

  ar <= ch1_val_re_signed;

  ch2_val_re_signed <= signed(ch2_val_re);

  ch2_val_im_signed <= signed(ch2_val_im);

  -- 'average__instance_P2__fixpt:26' P = fi(real(ch1_val*conj(ch2_val))*(fi(1/4, 0, 32, 33, fm)), 0, 32, -13, fm);
  y_re <= ch2_val_re_signed;
  p80y_cast <= resize(ch2_val_im_signed, 33);
  p80y_cast_1 <=  - (p80y_cast);
  y_im <= p80y_cast_1(31 DOWNTO 0);

  br <= y_re;

  ai <= ch1_val_im_signed;

  bi <= y_im;

  p75P_mul_temp <= ar * br;
  p75P_sub_cast <= resize(p75P_mul_temp, 65);
  p75P_mul_temp_1 <= ai * bi;
  p75P_sub_cast_1 <= resize(p75P_mul_temp_1, 65);
  p75P_sub_temp <= p75P_sub_cast - p75P_sub_cast_1;
  -- CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  p75P_mul_temp_2 <= resize(p75P_sub_temp & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 98);
  p75P_cast <= p75P_mul_temp_2(96 DOWNTO 0);
  P <= unsigned(p75P_cast(91 DOWNTO 60));

  enb_gated_3 <= stateControl_7 AND enb;

  buf2_ram_wrenb <= '1';

  
  tmp_16 <= to2val_1 WHEN tmp_7 = '0' ELSE
      to2val;

  
  tmp_17 <= tmp_16 WHEN tmp_1 = '0' ELSE
      to2val_2;

  -- HDL code generation from MATLAB function: average__instance_P2__fixpt_trueregionp26
  to2val_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to2val_2 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lastCycle = '1' THEN
        to2val_2 <= tmp_17;
      END IF;
    END IF;
  END PROCESS to2val_reg_process;


  
  tmp_18 <= val WHEN tmp_1 = '0' ELSE
      to2val_2;

  buf2_unsigned <= unsigned(buf2);

  out0_bypass_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      buf2_last_value <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_3 = '1' THEN
        buf2_last_value <= buf2_1;
      END IF;
    END IF;
  END PROCESS out0_bypass_3_process;


  
  buf2_1 <= buf2_last_value WHEN stateControl_7 = '0' ELSE
      buf2_unsigned;

  
  tmp_19 <= buf2_1 WHEN tmp_1 = '0' ELSE
      tmp_15;

  p54to2val_add_cast <= resize(tmp_19 & '0', 34);
  p54to2val_add_cast_1 <= resize(P, 34);
  p54to2val_add_temp <= p54to2val_add_cast + p54to2val_add_cast_1;
  to2val_1 <= p54to2val_add_temp(32 DOWNTO 1);

  delayMatch_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to2val_3 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        to2val_3 <= to2val_1;
      END IF;
    END IF;
  END PROCESS delayMatch_2_process;


  
  tmp_20 <= outpk_2 WHEN tmp_6 = '0' ELSE
      to2val_3;

  tmp_21 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  delayMatch_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      tmp_22 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        tmp_22 <= tmp_21;
      END IF;
    END IF;
  END PROCESS delayMatch_3_process;


  to1val <= to_unsigned(0, 32);

  tmp_23 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  
  lastCycle_1 <= '1' WHEN ctr_0_sig = to_unsigned(16#00#, 8) ELSE
      '0';

  val_1 <= to_unsigned(0, 32);

  stateControl_9 <= '1';

  to1adr <= to_unsigned(16#401#, 11);

  -- 'average__instance_P2__fixpt:37' to1val(:) = buf1(to1adr)+P;
  -- 
  -- 'average__instance_P2__fixpt:52' value = fi(to2val, 0, 32, -14, fm);
  -- 
  -- 'average__instance_P2__fixpt:53' if (Nac == fi(1, 0, 1, 0, fm)) & (ready_in)
  -- 
  -- 'average__instance_P2__fixpt:54' outpk(:) = to2val;
  -- 
  -- 'average__instance_P2__fixpt:55' outbin(:) = count;
  p92tmp_cast <= count_unsigned & '0';
  p92tmp_cast_1 <= SHIFT_RIGHT(p92tmp_cast, 1);
  p92tmp_add_cast <= resize(p92tmp_cast_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 46);
  p92tmp_add_temp <= p92tmp_add_cast + unsigned'("0000000000000010000000000000000000000000000000");
  tmp_24 <= p92tmp_add_temp(42 DOWNTO 32);

  
  tmp_25 <= to1adr WHEN ready_in = '0' ELSE
      tmp_24;

  enb_gated_4 <= stateControl_9 AND enb;

  to1adr_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to1adr_1 <= to_unsigned(16#401#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_4 = '1' THEN
        to1adr_1 <= tmp_26;
      END IF;
    END IF;
  END PROCESS to1adr_reg_process;


  out0_bypass_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to1adr_last_value <= to_unsigned(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_4 = '1' THEN
        to1adr_last_value <= to1adr_2;
      END IF;
    END IF;
  END PROCESS out0_bypass_4_process;


  
  to1adr_2 <= to1adr_last_value WHEN stateControl_9 = '0' ELSE
      to1adr_1;

  
  tmp_26 <= to1adr_2 WHEN tmp_1 = '0' ELSE
      tmp_25;

  -- HDL code generation from MATLAB function: average__instance_P2__fixpt_falseregionp19
  p55tmp_sub_cast <= signed(resize(tmp_26, 32));
  tmp_27 <= p55tmp_sub_cast - 1;

  addr_2 <= to_signed(16#00000401#, 32);

  
  tmp_28 <= tmp_27 WHEN tmp_1 = '0' ELSE
      addr_2;

  indexLogic_fixptsig_2 <= unsigned(tmp_28(10 DOWNTO 0));

  -- 'average__instance_P2__fixpt:31' if ticktock
  addr_3 <= to_signed(16#00000401#, 32);

  -- HDL code generation from MATLAB function: average__instance_P2__fixpt_trueregionp69
  p90tmp_sub_cast <= signed(resize(tmp_25, 32));
  tmp_29 <= p90tmp_sub_cast - 1;

  
  tmp_30 <= addr_3 WHEN tmp_1 = '0' ELSE
      tmp_29;

  indexLogic_fixptsig_3 <= unsigned(tmp_30(10 DOWNTO 0));

  stateControl_11 <= '1';

  tmp_31 <= to_unsigned(0, 32);

  enb_gated_5 <= stateControl_11 AND enb;

  buf1_ram_wrenb <= '1';

  
  tmp_32 <= to1val_1 WHEN tmp_23 = '0' ELSE
      to1val;

  
  tmp_33 <= to1val_2 WHEN tmp_1 = '0' ELSE
      tmp_32;

  to1val_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to1val_2 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lastCycle_1 = '1' THEN
        to1val_2 <= tmp_33;
      END IF;
    END IF;
  END PROCESS to1val_reg_process;


  -- 'average__instance_P2__fixpt:38' if (Nac == fi(1, 0, 1, 0, fm)) & (ready_in)
  -- 
  -- 'average__instance_P2__fixpt:39' outpk(:) = to1val;
  -- 
  -- 'average__instance_P2__fixpt:40' outbin(:) = count;
  -- 
  -- HDL code generation from MATLAB function: average__instance_P2__fixpt_falseregionp16
  tmp_34 <= to1val_2(30 DOWNTO 0) & '0';

  
  tmp_35 <= tmp_34 WHEN tmp_1 = '0' ELSE
      val_1;

  buf1_unsigned <= unsigned(buf1);

  out0_bypass_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      buf1_last_value <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_5 = '1' THEN
        buf1_last_value <= buf1_1;
      END IF;
    END IF;
  END PROCESS out0_bypass_5_process;


  
  buf1_1 <= buf1_last_value WHEN stateControl_11 = '0' ELSE
      buf1_unsigned;

  
  tmp_36 <= tmp_31 WHEN tmp_1 = '0' ELSE
      buf1_1;

  p45to1val_add_cast <= resize(tmp_36, 33);
  p45to1val_add_cast_1 <= resize(P, 33);
  p45to1val_add_temp <= p45to1val_add_cast + p45to1val_add_cast_1;
  to1val_1 <= p45to1val_add_temp(32 DOWNTO 1);

  delayMatch_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      to1val_3 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        to1val_3 <= to1val_1;
      END IF;
    END IF;
  END PROCESS delayMatch_4_process;


  
  tmp_37 <= outpk_2 WHEN tmp_22 = '0' ELSE
      to1val_3;

  
  tmp_38 <= tmp_20 WHEN tmp_2 = '0' ELSE
      tmp_37;

  outpk <= std_logic_vector(tmp_38);

  tmp_39 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  -- 'average__instance_P2__fixpt:24' outbin = fi(int16(0), 0, 11, 0, fm);
  outbin_1 <= to_unsigned(16#000#, 11);

  -- 'average__instance_P2__fixpt:56' to2val(:) = 0;
  -- 
  -- 'average__instance_P2__fixpt:57' ready_out(:)=true;
  -- 
  -- 'average__instance_P2__fixpt:59' buf1(to1adr) = to1val;
  tmp_40 <= count_unsigned(10 DOWNTO 0);

  
  tmp_41 <= outbin_1 WHEN tmp_39 = '0' ELSE
      tmp_40;

  tmp_42 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  -- 'average__instance_P2__fixpt:41' to1val(:) = 0;
  -- 
  -- 'average__instance_P2__fixpt:42' ready_out(:)=true;
  -- 
  -- 'average__instance_P2__fixpt:44' buf2(to2adr) = to2val;
  -- 
  -- 'average__instance_P2__fixpt:64' Nac(:) = 4;
  -- 
  -- HDL code generation from MATLAB function: average__instance_P2__fixpt
  tmp_43 <= count_unsigned(10 DOWNTO 0);

  
  tmp_44 <= outbin_1 WHEN tmp_42 = '0' ELSE
      tmp_43;

  
  tmp_45 <= tmp_41 WHEN tmp_1 = '0' ELSE
      tmp_44;

  delayMatch_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      outbin_tmp <= to_unsigned(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        outbin_tmp <= tmp_45;
      END IF;
    END IF;
  END PROCESS delayMatch_5_process;


  outbin <= std_logic_vector(outbin_tmp);

  tmp_46 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  -- 'average__instance_P2__fixpt:23' ready_out = false;
  -- 
  -- 'average__instance_P2__fixpt:12' if isempty(Nac)
  -- 
  -- 'average__instance_P2__fixpt:8' fm = get_fimath();
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --          Generated by MATLAB 9.12 and Fixed-Point Designer 7.4           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  ready_out_1 <= '0';

  ready_out_2 <= '1';

  
  tmp_47 <= ready_out_1 WHEN tmp_46 = '0' ELSE
      ready_out_2;

  tmp_48 <= hdlcoder_to_stdlogic(Nac_1 = to_unsigned(16#1#, 3)) AND ready_in;

  ready_out_3 <= '1';

  
  tmp_49 <= ready_out_1 WHEN tmp_48 = '0' ELSE
      ready_out_3;

  
  tmp_50 <= tmp_47 WHEN tmp_1 = '0' ELSE
      tmp_49;

  delayMatch_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ready_out <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        ready_out <= tmp_50;
      END IF;
    END IF;
  END PROCESS delayMatch_6_process;


  ce_out <= clk_enable;

END rtl;

